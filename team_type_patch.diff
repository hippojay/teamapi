--- a/frontend/src/pages/SquadDetailPage.jsx
+++ b/frontend/src/pages/SquadDetailPage.jsx
@@ -1,6 +1,6 @@
 import React, { useState, useEffect, useRef } from 'react';
 import { useParams, Link } from 'react-router-dom';
-import { Users, Database, GitBranch, Bell, Clock, ChevronRight, Globe, Server, Smartphone, Code, Plus, Edit, Trash2, X } from 'lucide-react';
+import { Users, Database, GitBranch, Bell, Clock, ChevronRight, Globe, Server, Smartphone, Code, Plus, Edit, Trash2, X, Tag } from 'lucide-react';
+import TeamTypeEditor from '../components/TeamTypeEditor';
 import DescriptionEditor from '../components/DescriptionEditor';
 import ServiceEditor from '../components/ServiceEditor';
 import { useAuth } from '../context/AuthContext';
@@ -17,6 +17,7 @@
   const [tribe, setTribe] = useState(null);
   const [area, setArea] = useState(null);
   const [showTeamCompositionModal, setShowTeamCompositionModal] = useState(false);
+  const [updatingTeamType, setUpdatingTeamType] = useState(false);
   const modalRef = useRef(null);
   const { isAuthenticated } = useAuth();
   const [editingService, setEditingService] = useState(null);
@@ -143,6 +144,22 @@
     return db_user;
   };
 
+  // Handler for updating team type
+  const handleTeamTypeUpdate = async (newTeamType) => {
+    setUpdatingTeamType(true);
+    try {
+      await api.updateSquadTeamType(squad.id, newTeamType);
+      // Update the squad in our local state
+      setSquad(prev => ({
+        ...prev,
+        team_type: newTeamType
+      }));
+      // Show success indicator temporarily
+      setTimeout(() => setUpdatingTeamType(false), 1500);
+    } catch (err) {
+      console.error('Error updating team type:', err);
+      alert('Failed to update team type. Please try again.');
+      setUpdatingTeamType(false);
+    }
+  };
+
   // Handle loading state
   if (loading) {
     return <div className="text-center py-10">Loading...</div>;
@@ -253,6 +270,25 @@
                 {squad.status}
               </span>
             </div>
+
+            {/* Team Type - NEW COMPONENT */}
+            <div className="mb-4 p-3 bg-gray-50 rounded-lg">
+              <div className="flex items-center mb-1">
+                <Tag className="h-4 w-4 mr-1 text-blue-600" />
+                <span className="text-sm font-medium text-gray-700">Team Type:</span>
+              </div>
+              <div className={updatingTeamType ? "opacity-50 pointer-events-none" : ""}>
+                <TeamTypeEditor 
+                  teamType={squad.team_type || "stream_aligned"} 
+                  onUpdate={handleTeamTypeUpdate}
+                  readOnly={!isAuthenticated}
+                />
+              </div>
+              {updatingTeamType && (
+                <div className="text-center text-sm text-blue-600 mt-2">
+                  Updating team type...
+                </div>
+              )}
+            </div>
+
             <div className="flex items-center space-x-2 text-gray-600 mb-4">
               <Users className="h-5 w-5" />
               <span>{squad.member_count > 0 ? squad.member_count : 'No'} member{squad.member_count !== 1 ? 's' : ''}</span>
